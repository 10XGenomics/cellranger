[net]
git-fetch-with-cli = true

[target.'cfg(target_os="linux")']
rustflags = [
  "-Cforce-frame-pointers=yes",
  "-Ctarget-feature=+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt",
]

[target.'cfg(target_os="macos")']
rustflags = [
  "-Clink-arg=-undefined",
  "-Clink-arg=dynamic_lookup",
]

[target.'cfg(unix)']
rustflags = [
  # --- lint deny ---
  # rustc lints
  "-Dfuture_incompatible",
  "-Dnonstandard_style",
  "-Drust_2018_idioms",
  "-Dunused",
  # clippy categorical
  "-Dclippy::complexity",
  "-Dclippy::perf",
  "-Dclippy::style",
  "-Dclippy::suspicious",
  # clippy pedantic
  "-Dclippy::cloned_instead_of_copied",
  "-Dclippy::enum_glob_use",
  "-Dclippy::explicit_deref_methods",
  "-Dclippy::explicit_into_iter_loop",
  "-Dclippy::explicit_iter_loop",
  "-Dclippy::filter_map_next",
  "-Dclippy::flat_map_option",
  "-Dclippy::from_iter_instead_of_collect",
  "-Dclippy::implicit_clone",
  "-Dclippy::inefficient_to_string",
  "-Dclippy::manual_assert",
  "-Dclippy::manual_let_else",
  "-Dclippy::manual_string_new",
  "-Dclippy::map_unwrap_or",
  "-Dclippy::match_wildcard_for_single_variants",
  "-Dclippy::mut_mut",
  "-Dclippy::needless_bitwise_bool",
  "-Dclippy::needless_continue",
  "-Dclippy::needless_for_each",
  "-Dclippy::redundant_closure_for_method_calls",
  "-Dclippy::redundant_else",
  "-Dclippy::semicolon_if_nothing_returned",
  "-Dclippy::uninlined_format_args",
  "-Dclippy::unused_self",
  "-Dclippy::used_underscore_binding",
  "-Dclippy::wildcard_imports",
  # clippy nursery
  "-Dclippy::needless_collect",
  "-Dclippy::or_fun_call",
  # --- lint allow ---
  "-Aclippy::comparison_chain",
]
