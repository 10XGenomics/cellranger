diff --git a/src/modules/flann/include/opencv2/flann/index_testing.h b/src/modules/flann/include/opencv2/flann/index_testing.h
index 207adef..b63915b 100644
--- a/src/modules/flann/include/opencv2/flann/index_testing.h
+++ b/src/modules/flann/include/opencv2/flann/index_testing.h
@@ -246,7 +246,7 @@ void test_index_precisions(NNIndex<Distance>& index, const Matrix<typename Dista
     float p2;
 
     int c1 = 1;
-    float p1;
+    //float p1;
 
     float time;
     DistanceType dist;
@@ -270,7 +270,7 @@ void test_index_precisions(NNIndex<Distance>& index, const Matrix<typename Dista
         precision = precisions[i];
         while (p2<precision) {
             c1 = c2;
-            p1 = p2;
+            //p1 = p2;
             c2 *=2;
             p2 = search_with_ground_truth(index, inputData, testData, matches, nn, c2, time, dist, distance, skipMatches);
             if ((maxTime> 0)&&(time > maxTime)&&(p2<precision)) return;
diff --git a/src/modules/core/src/datastructs.cpp b/src/modules/core/src/datastructs.cpp
index 1ff6fa9..563b571 100644
--- a/src/modules/core/src/datastructs.cpp
+++ b/src/modules/core/src/datastructs.cpp
@@ -133,8 +133,6 @@ cvCreateChildMemStorage( CvMemStorage * parent )
 static void
 icvDestroyMemStorage( CvMemStorage* storage )
 {
-    int k = 0;
-
     CvMemBlock *block;
     CvMemBlock *dst_top = 0;
 
@@ -144,7 +142,7 @@ icvDestroyMemStorage( CvMemStorage* storage )
     if( storage->parent )
         dst_top = storage->parent->top;
 
-    for( block = storage->bottom; block != 0; k++ )
+    for( block = storage->bottom; block != 0; )
     {
         CvMemBlock *temp = block;
 
diff --git a/src/modules/core/src/lpsolver.cpp b/src/modules/core/src/lpsolver.cpp
index 951da3f..9ad820a 100644
--- a/src/modules/core/src/lpsolver.cpp
+++ b/src/modules/core/src/lpsolver.cpp
@@ -253,10 +253,10 @@ static int initialize_simplex(Mat_<double>& c, Mat_<double>& b,double& v,vector<
 }
 
 static int inner_simplex(Mat_<double>& c, Mat_<double>& b,double& v,vector<int>& N,vector<int>& B,vector<unsigned int>& indexToRow){
-    int count=0;
+    //int count=0;
     for(;;){
-        dprintf(("iteration #%d\n",count));
-        count++;
+        //dprintf(("iteration #%d\n",count));
+        //count++;
 
         static MatIterator_<double> pos_ptr;
         int e=-1,pos_ctr=0,min_var=INT_MAX;
diff --git a/src/modules/features2d/src/kaze/KAZEFeatures.cpp b/src/modules/features2d/src/kaze/KAZEFeatures.cpp2
index ab591d4..7bd0ba6 100644
--- a/src/modules/features2d/src/kaze/KAZEFeatures.cpp
+++ b/src/modules/features2d/src/kaze/KAZEFeatures.cpp
@@ -312,7 +312,7 @@ void KAZEFeatures::Determinant_Hessian(std::vector<KeyPoint>& kpts)
 {
     int level = 0;
     float smax = 3.0;
-    int npoints = 0, id_repeated = 0;
+    int id_repeated = 0;
     int left_x = 0, right_x = 0, up_y = 0, down_y = 0;
     bool is_extremum = false, is_repeated = false, is_out = false;
 
@@ -383,7 +383,6 @@ void KAZEFeatures::Determinant_Hessian(std::vector<KeyPoint>& kpts)
                 if (is_out == false) {
                     if (is_repeated == false) {
                         kpts.push_back(kpts_par_ij);
-                        npoints++;
                     }
                     else {
                         kpts[id_repeated] = kpts_par_ij;
diff --git a/src/modules/calib3d/src/calibinit.cpp b/src/modules/calib3d/src/calibinit.cpp
index e25dd26..54afacd 100644
--- a/src/modules/calib3d/src/calibinit.cpp
+++ b/src/modules/calib3d/src/calibinit.cpp
@@ -1471,6 +1471,7 @@ int ChessBoardDetector::checkQuadGroup(std::vector<ChessBoardQuad*>& quad_group,
     // find and store the first row (or column)
     for (int j = 1; ; ++j)
     {
+        (void)j;
         right->row = 0;
         out_corners.push_back(right);
         //cvCircle( debug_img, cvPointFrom32f(right->pt), 3, cvScalar(0,255-j*10,0), -1, 8, 0 );
