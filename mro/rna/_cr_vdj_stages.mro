# Copyright 2023 10x Genomics, Inc. All rights reserved.
#
# Code generated by cr_vdj.  DO NOT EDIT.
#

filetype arp.bincode;
filetype bam;
filetype bam.bai;
filetype bdf.bincode;
filetype bed;
filetype bin;
filetype bincode;
filetype bincode.lz4;
filetype csv;
filetype fa;
filetype fasta;
filetype fasta.fai;
filetype fastq;
filetype fprint.json;
filetype h5;
filetype html;
filetype json;
filetype json.lz4;
filetype pb;
filetype tsv;
filetype txt;

struct VdjRefFastaFolder(
    fa regions,
)

struct VdjRefFolder(
    VdjRefFastaFolder fasta,
    json              reference,
)

struct FilterSwitch(
    bool asm_shared_contig,
    bool enclone_shared_contig,
    bool enclone_multiplet,
    bool enclone_umi,
)

struct WhitelistSpec(
    string name,
    file   translation_whitelist_path,
    string slide,
    string part,
)

struct BarcodeReadComponent(
    string        read_type,
    string        kind,
    int           offset,
    int           length,
    WhitelistSpec whitelist,
)

struct UmiWhitelistSpec(
    string slide,
    string part,
    string translation,
)

struct UmiReadComponent(
    string           read_type,
    int              offset,
    int              length,
    int              min_length,
    UmiWhitelistSpec whitelist,
)

struct RnaReadComponent(
    string read_type,
    int    offset,
    int    length,
    int    min_length,
)

struct ChemistryDef(
    string                 name,
    string                 description,
    string                 endedness,
    string                 strandedness,
    BarcodeReadComponent[] barcode,
    UmiReadComponent[]     umi,
    RnaReadComponent       rna,
    RnaReadComponent       rna2,
    map                    barcode_extraction,
)

stage COPY_VDJ_REFERENCE(
    in  path         vdj_reference_path,
    out VdjRefFolder vdj_reference,
    src comp         "cr_vdj martian copy_vdj_reference",
)

stage SUMMARIZE_VDJ_FILTERS(
    in  string   sample_id,
    in  string   sample_description,
    in  json     all_contig_annotations,
    in  json.lz4 asm_filter_diagnostics,
    in  json     enclone_barcode_fate,
    in  h5       raw_matrix_h5,
    out html     filter_summary,
    out json     metrics_summary,
    src comp     "cr_vdj martian summarize_vdj_filters",
) using (
    mem_gb = 5,
)

stage CREATE_BARCODE_CSV(
    in  h5  gex_filtered_matrix,
    in  csv vdj_filtered_annotations,
    in  map count_gem_well_map,
    out csv per_barcode_csv,
    src comp "cr_vdj martian create_barcode_csv",
)

stage RUN_ENCLONE(
    in  FilterSwitch filter_switch,
    in  path         vdj_reference_path,
    in  json         contig_annotations,
    in  string       receptor,
    out json         summary,
    out pb           enclone_output,
    out fa           donor_ref_fa,
    out json         barcode_fate,
    out bool         disable_vloupe,
    src comp         "cr_vdj martian assigner",
) using (
    mem_gb  = 5,
    threads = -4,
)

stage WRITE_CLONOTYPE_OUTS(
    in  int    sample_number,
    in  string receptor,
    in  pb     enclone_output,
    out csv    clonotypes_csv,
    src comp   "cr_vdj martian write_clonotype_outs",
) using (
    mem_gb = 8,
)

stage FILL_CLONOTYPE_INFO(
    in  int  sample_number,
    in  json contig_annotations,
    in  pb   enclone_output,
    out json all_contig_annotations_json,
    src comp "cr_vdj martian fill_clonotype_info",
) using (
    mem_gb = 2,
)

stage HANDLE_NO_CLONOTYPING(
    in  json asm_contig_json,
    in  json clonotype_contig_json,
    in  bool disable_clonotyping,
    out json final_contig_annotations,
    src comp "cr_vdj martian handle_no_clonotyping",
)

stage WRITE_CONCAT_REF_OUTS(
    in  int       sample_number,
    in  pb        enclone_output,
    in  json      all_contig_annotations_json,
    out bam       concat_ref_bam,
    out bam.bai   concat_ref_bam_bai,
    out fasta     concat_ref_fasta,
    out fasta.fai concat_ref_fasta_fai,
    src comp      "cr_vdj martian write_concat_ref_outs",
) using (
    mem_gb  = 5,
    threads = 4,
)

stage WRITE_CONSENSUS_BAM(
    in  int     sample_number,
    in  pb      enclone_output,
    in  json    all_contig_annotations_json,
    out bam     consensus_bam,
    out bam.bai consensus_bam_bai,
    src comp    "cr_vdj martian write_consensus_bam",
) using (
    mem_gb  = 4,
    threads = 4,
)

stage WRITE_CONSENSUS_TXT(
    in  int       sample_number,
    in  pb        enclone_output,
    out fasta     consensus_fasta,
    out fasta.fai consensus_fasta_fai,
    out csv       consensus_annotations_csv,
    src comp      "cr_vdj martian write_consensus_txt",
) using (
    mem_gb  = 4,
    threads = 1,
)

stage ASSEMBLE_VDJ(
    in  map<ChemistryDef> chemistry_defs,
    in  bincode.lz4[]     bc_sorted_rna_reads,
    in  path              vdj_reference_path,
    in  string            receptor,
    in  int               n50_n50_rpu,
    in  int               npairs,
    in  bool              denovo,
    in  path              inner_enrichment_primers,
    in  int               total_read_pairs,
    in  json              corrected_bc_counts,
    in  int               min_contig_length,
    out bam               contig_bam,
    out bam.bai           contig_bam_bai,
    out tsv               summary_tsv,
    out tsv               umi_summary_tsv,
    out json              metrics_summary_json,
    out json              contig_annotations,
    out bdf.bincode       barcode_brief,
    out csv               barcode_support,
    out json[]            barcodes_in_chunks,
    out arp.bincode       assemblable_reads_per_bc,
    out txt               align_info,
    out fastq             unmapped_sample_fastq,
    out txt               report,
    src comp              "cr_vdj martian assembly",
) split (
    in  bincode.lz4       chunk_rna_reads,
    in  bool              perf_track,
    in  int               chunk_id,
    out json              barcodes_in_chunk,
    out bin               barcode_data,
    out bin               barcode_data_sum,
    out bin               barcode_data_brief,
    out bincode           outs_builder,
)

stage ASM_CALL_CELLS(
    in  string            receptor,
    in  bool              denovo,
    in  path              vdj_reference_path,
    in  map<ChemistryDef> count_chemistry_defs,
    in  json              contig_annotations,
    in  bdf.bincode       barcode_brief,
    in  int               n50_n50_rpu,
    in  FilterSwitch      filter_switch,
    in  fprint.json       sample_fingerprint,
    out json              contig_annotations,
    out json.lz4          filter_diagnostics,
    src comp              "cr_vdj martian asm_call_cells",
) using (
    mem_gb = 4,
) retain (
    filter_diagnostics,
)

stage CREATE_AIRR_TSV(
    in  json  contig_annotations,
    in  fasta concat_ref_fasta,
    in  map   gem_well_map,
    out tsv   airr_annotations,
    src comp  "cr_vdj martian airr_filter",
)

stage WRITE_CONTIG_OUTS(
    in  json        contig_annotations,
    in  int         total_read_pairs,
    in  json        corrected_bc_counts,
    in  arp.bincode assemblable_reads_per_bc,
    out fastq       contig_fastq,
    out fastq       filtered_contig_fastq,
    out fasta       contig_fasta,
    out fasta.fai   contig_fasta_fai,
    out fasta       filtered_contig_fasta,
    out bed         annotations_bed,
    out json        cell_barcodes,
    out json        paired_cell_barcodes,
    out json        paired_prod_barcodes,
    out json        paired_cdr3_barcodes,
    out json        prod_barcodes,
    out json        cdr3_barcodes,
    out json        all_contig_barcodes,
    out json        summary,
    src comp        "cr_vdj martian write_contig_outs",
)

stage HANDLE_GEX_CELLS(
    in  json asm_contig_annotations,
    in  csv  filtered_barcodes,
    in  bool is_antibody_only,
    in  bool is_non_targeted_gex,
    out json contig_annotations,
    src comp "cr_vdj martian handle_gex_cells",
)

stage MAKE_FILTER_SWITCH(
    in  bool         disable_count,
    in  bool         is_antibody_only,
    in  bool         is_non_targeted_gex,
    in  bool         multiplet_filter,
    in  bool         shared_contig_filter,
    in  bool         umi_baseline_filter,
    out FilterSwitch filter_switch,
    src comp         "cr_vdj martian make_filter_switch",
)

stage MERGE_PER_SAMPLE_ANNOTATIONS(
    in  map<json> per_sample_annotations,
    out json      contig_annotations,
    src comp      "cr_vdj martian merge_per_sample_annotations",
)

stage WRITE_ANN_CSV(
    in  json all_contig_annotations_json,
    out csv  all_contig_annotations_csv,
    out csv  filtered_contig_annotations_csv,
    src comp "cr_vdj martian write_ann_csv",
)

stage SUBSET_ASSEMBLY_OUTS(
    in  bool              per_sample,
    in  map<ChemistryDef> count_chemistry_defs,
    in  fprint.json       sample_fingerprint,
    in  json              contig_annotations,
    in  json              merged_annotations,
    in  int               total_read_pairs,
    in  json              corrected_barcode_counts,
    in  arp.bincode       assemblable_reads_per_bc,
    in  tsv               contig_summary,
    in  tsv               umi_summary,
    in  csv               barcode_support,
    in  bdf.bincode       barcode_brief,
    out json              contig_annotations,
    out int               total_read_pairs,
    out json              corrected_barcode_counts,
    out arp.bincode       assemblable_reads_per_bc,
    out tsv               contig_summary,
    out tsv               umi_summary,
    out csv               barcode_support,
    out bdf.bincode       barcode_brief,
    src comp              "cr_vdj martian subset_assembly_outs",
)
