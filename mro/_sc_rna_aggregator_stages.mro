#
# Copyright (c) 2017 10X Genomics, Inc. All rights reserved.
#
filetype bam;
filetype bam.bai;
filetype csv;
filetype tsv;
filetype fastq;
filetype json;
filetype h5;
filetype html;
filetype pickle;

stage AGGREGATOR_PREFLIGHT(
    in  map[]  sample_defs,
    in  string normalization_mode,
    src py     "stages/aggregator/aggregator_preflight",
)

stage PARSE_CSV(
    in  path  pipestance_root,
    in  csv   aggregation_csv,
    in  bool  reanalyze,
    in  h5    matrix_h5,
    out csv   aggregation_csv,
    out map[] sample_defs,
    src py    "stages/aggregator/parse_csv",
)

stage CHECK_MOLECULE_INFO_VERSION(
    in  map[] sample_defs,
    out map[] updated_sample_defs,
    src py    "stages/aggregator/check_molecule_info_version",
) split (
    in  int   mol_h5_version,
    in  map   sample_def,
    out map   updated_sample_def,
)

stage SETUP_SAMPLES(
    in  map[] sample_defs,
    out map   gem_group_index,
    out map[] libraries,
    out json  gem_group_index_json,
    out bool  chemistry_batch_correction,
    src py    "stages/aggregator/setup_samples",
)

stage MERGE_MOLECULES(
    in  map[]  sample_defs,
    in  map[]  libraries,
    out h5     merged_molecules,
    out map    gem_group_barcode_ranges,
    src py     "stages/aggregator/merge_molecules",
) split (
    in  string aggr_id,
    in  h5     molecule_h5,
    in  int    barcode_idx_offset,
    in  int    barcode_idx_end,
    in  pickle merged_barcodes,
    out int[]  new_gem_groups,
    out h5     molecule_h5,
) using (
    mem_gb = 8,
)

stage NORMALIZE_DEPTH(
    in  map     gem_group_index,
    in  h5      molecules,
    in  string  normalization_mode,
    in  map     gem_group_barcode_ranges,
    out h5[]    raw_matrices_h5,
    out int     raw_nnz,
    out h5[]    filtered_matrices_h5,
    out int     filtered_nnz,
    out json    summary,
    src py      "stages/aggregator/normalize_depth",
) split (
    in  float[] frac_reads_kept,
    in  int[]   num_cells,
    in  int     chunk_start,
    in  int     chunk_len,
    out json    chunk_summary,
    out h5      raw_matrix_h5,
    out h5      filtered_matrix_h5,
)

stage WRITE_MATRICES(
    in  map[] sample_defs,
    in  map   gem_group_index,
    in  h5    molecules,
    in  h5[]  raw_matrices_h5,
    in  int   raw_nnz,
    in  h5[]  filtered_matrices_h5,
    in  int   filtered_nnz,
    in  json  summary,
    out h5    raw_matrix_h5,
    out path  raw_matrix_mex,
    out h5    filtered_matrix_h5,
    out path  filtered_matrix_mex,
    out h5    barcode_summary_h5,
    out json  summary,
    src py    "stages/aggregator/write_matrices",
) split (
)

stage CHECK_INVARIANTS(
    in  map[] input_sample_defs,
    in  h5    merged_raw_gene_bc_matrices_h5,
    out json  summary,
    src py    "stages/aggregator/check_invariants",
) split (
)

stage SUMMARIZE_AGGREGATED_REPORTS(
    in  string sample_id,
    in  string sample_desc,
    in  map    gem_group_index,
    in  h5     filtered_matrices_h5,
    in  h5     barcode_summary_h5,
    in  path   analysis,
    in  json   normalize_depth_summary,
    in  json   count_genes_summary,
    in  json   analyze_matrices_summary,
    out json   summary,
    out html   web_summary,
    src py     "stages/aggregator/summarize_reports",
) split (
)
