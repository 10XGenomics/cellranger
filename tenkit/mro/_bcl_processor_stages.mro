#
# Copyright (c) 2014 10X Genomics, Inc. All rights reserved.
#
filetype fastq;
filetype json;
filetype script;

stage BCL_PROCESSOR_PREFLIGHT(
    in  path run_path,
    in  bool allow_no_barcodes,
    in  bool check_executables,
    src py   "stages/bcl_processor/bcl_processor_preflight",
)

stage BCL_PROCESSOR_PREFLIGHT_LOCAL(
    in  path run_path,
    in  bool allow_no_barcodes,
    in  bool check_executables,
    src py   "stages/bcl_processor/bcl_processor_preflight",
)

stage COMPUTE_DEMUX_PARAMS(
    in  path   run_path,
    out bool   rc_i2_read,
    out string si_read_type,
    out bool   split_by_tile,
    src py     "stages/bcl_processor/compute_demux_params",
)

stage BARCODE_AWARE_BCL2FASTQ(
    in  path   run_path,
    in  int    num_threads,
    in  bool   split_by_tile,
    out path   raw_fastq_path,
    src py     "stages/bcl_processor/barcode_aware_bcl2fastq",
) split using (
    in  string tile_suffix,
)

stage DEMULTIPLEX(
    in  path     raw_fastq_path,
    in  float    sample_index_error_rate,
    in  bool     interleave,
    in  bool     rc_i2_read,
    in  string   si_read_type,
    in  bool     split_by_tile,
    out path     demultiplexed_fastq_path,
    out json     demultiplex_summary,
    out string[] common_bcs,
    src py       "stages/bcl_processor/demultiplex",
) split using (
    in  bool   demultiplex,
    in  string common_bcs,
    in  string input_files,
    in  string read_types,
    in  int    chunk_number,
    in  string tile_folder,
)

stage MERGE_FASTQS_FROM_TILES(
    in  path     demultiplexed_fastq_path,
    in  string[] common_bcs,
    in  bool     split_by_tile,
    out path     demultiplexed_fastq_path,
    out json     demultiplex_summary,
    src py       "stages/bcl_processor/merge_fastqs_from_tiles",
) split using (
    in  int      lane,
    in  string[] bcs,
)
