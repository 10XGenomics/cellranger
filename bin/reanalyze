#!/usr/bin/env bash
#
# Copyright (c) 2017 10x Genomics, Inc. All rights reserved.
#
# Run SC_RNA_REANALYZER_CS with mrp.
#

source $TENX_SCRIPTDIR/common/_includes

DOCOPT_SPEC="$(cat <<EOF
'$TENX_PRODUCT $TENX_SUBCMD' performs secondary analysis \(dimensionality
reduction, clustering and differential expression\) on a gene-barcode matrix
generated by the '$TENX_PRODUCT count' or '$TENX_PRODUCT aggr' pipelines.

The analysis takes parameter settings from a CSV file. Please see the following
URL for details on the CSV format:
support.10xgenomics.com/single-cell/software

This pipeline does not support multi-genome samples.

The commands below should be preceded by '$TENX_PRODUCT':

Usage:
    $TENX_SUBCMD
        --id=ID
        --matrix=MATRIX_H5
        [options]
    $TENX_SUBCMD <run_id> <mro> [options]
    $TENX_SUBCMD -h | --help | --version

Arguments:
    id          A unique run id, used to name output folder [a-zA-Z0-9_-]+.
    matrix      A gene-barcode matrix containing data for one genome. Should be
                    the filtered version, unless using --force-cells.

Options:
# Analysis
    $DOCOPT_OPTIONS_SAMPLE_INFO
    --params=PARAMS_CSV        A CSV file specifying analysis parameters.
                                Optional.
    --barcodes=BARCODE_CSV     A CSV file containing a list of cell barcodes to
                                use for reanalysis, e.g. barcodes exported from
                                Loupe Cell Browser. Optional.
    --genes=GENES_CSV          A CSV file containing a list of gene IDs to
                                   use for reanalysis. These must correspond to
                                   the gene_id field in the reference GTF
                                   \(e.g. ENSG... for ENSEMBL-based references\).
                                   Optional.
    --exclude-genes=GENES_CSV  A CSV file containing a list of gene IDs to
                                   exclude for reanalysis. These must correspond
                                   to the gene_id field in the reference GTF
                                   \(e.g., ENSG... for ENSEMBL-based references\).
                                   The exclusion is applied after --genes.
                                   Optional.
    --agg=AGGREGATION_CSV      If the input matrix was produced by
                                   '$TENX_PRODUCT aggr', you may pass the same
                                   aggregation CSV in order to retain
                                   per-library tag information in the
                                   resulting .cloupe file. Optional.
    --force-cells=NUM          Force pipeline to use this number of cells,
                                   bypassing the cell detection algorithm.
                                   Optional.

# Martian Runtime
    $DOCOPT_OPTIONS_MRP_CLUSTER
EOF
)"

function implement_process_options {
    process_options_sample_info

    # --matrix
    if [ -n "$matrix" ]; then
        matrix=\"$(abspath $matrix)\"
    fi

    # --params
    if [ -n "$params" ]; then
        params=\"$(abspath $params)\"
    else
        params=null
    fi

    # --agg
    if [ -n "$agg" ]; then
        aggregation_csv=\"$(abspath $agg)\"
    else
        aggregation_csv=null
    fi

    # --barcodes
    if [ -n "$barcodes" ]; then
        barcodes=\"$(abspath $barcodes)\"
    else
        barcodes=null
    fi

    # --genes
    if [ -n "$genes" ]; then
        genes=\"$(abspath $genes)\"
    else
        genes=null
    fi

    # --exclude-genes
    if [ -n "$exclude_genes" ]; then
        exclude_genes=\"$(abspath $exclude_genes)\"
    else
        exclude_genes=null
    fi

    # --force-cells
    if [ -z "$force_cells" ]; then
        force_cells=null
    fi
}

function implement_generate_sample_defs {
    : # noop
}

function implement_generate_mro {
    cat <<EOF > $mro
@include "sc_rna_reanalyzer_cs.mro"

call SC_RNA_REANALYZER_CS(
    analysis_id = $sample_id,
    analysis_desc = $sample_desc,
    filtered_matrices_h5 = $matrix,
    params_csv = $params,
    aggregation_csv = $aggregation_csv,
    barcodes_csv = $barcodes,
    genes_csv = $genes,
    exclude_genes_csv = $exclude_genes,
    force_cells = $force_cells,
)
EOF
}

source $TENX_SCRIPTDIR/../tenkit/bin/common/_subcmd_mrp
