#!/usr/bin/env bash
#
# Copyright (c) 2017 10x Genomics, Inc. All rights reserved.
#
# Run SC_VDJ_ASSEMBLER_CS with mrp.
#

source $TENX_SCRIPTDIR/common/_includes

# Add pipeline-specific required args
DOCOPT_PREAMBLE_FASTQS=${DOCOPT_PREAMBLE_FASTQS/\[options\]/[--reference=DIR]
        \[options\]}

DOCOPT_PREAMBLE_FASTQS=${DOCOPT_PREAMBLE_FASTQS}'
    reference   Path of folder containing 10x-compatible VDJ reference.
                    Optional if '--denovo' is specified.'

DOCOPT_SPEC="$(cat <<EOF
'$TENX_PRODUCT $TENX_SUBCMD' assembles single-cell V\(D\)J immune receptor
sequences.

$DOCOPT_PREAMBLE_FASTQS

Options:
# Single Cell V(D)J assembly
    $DOCOPT_OPTIONS_SAMPLE_INFO
    --denovo            Run in reference-free mode (do not use annotations).
    --chain=CHAIN_SPEC  Chain type to display metrics for: 'TR' for T cell
                            receptors, 'IG' for B cell receptors, 'all'
                            to display all, or 'auto' to autodetect.
                            Default: 'auto.'
    --force-cells=NUM   Force pipeline to use this number of cells, bypassing
                            the cell detection algorithm.
    $DOCOPT_OPTIONS_FASTQS

# Martian Runtime
    $DOCOPT_OPTIONS_MRP_CLUSTER
EOF
)"

function implement_process_options {
    process_options_fastqs
    process_options_sample_info

    # --reference
    if [ -n "$reference" ]; then
        vdj_reference_path=\"$(abspath $reference)\"
    else
        vdj_reference_path=null
    fi

    # --denovo
    # docopt automatically assigns true/false - nothing to do

    # --chain
    if [ -n "$chain" ]; then
        chain=\"$chain\"
    else
        chain=\"auto\"
    fi

    # NOTE: docopt automatically converts dashes to underscores (e.g. force-cells becomes force_cells)

    # --force_cells
    if [ -z "$force_cells" ]; then
        force_cells=null
    fi
}

function implement_generate_sample_defs {
    sample_def=""
    for fastq in $fastqs; do
        sample_def="$sample_def
        {
            \"fastq_mode\": $fastq_mode,
            \"gem_group\": null,
            \"lanes\": $lanes,
            \"read_path\": \"$fastq\",
            \"sample_indices\": $indices,
            \"sample_names\": $sample_names
        },"
    done
    sample_def=${sample_def%\,}
    sample_def=$(echo -e "[ $sample_def\n    ]")
}

function implement_generate_mro {
    cat <<EOF > $mro
@include "sc_vdj_assembler_cs.mro"

call SC_VDJ_ASSEMBLER_CS(
    sample_id = $sample_id,
    sample_def = $sample_def,
    sample_desc = $sample_desc,
    vdj_reference_path = $vdj_reference_path,
    denovo = $denovo,
    force_cells = $force_cells,
    chain_type = $chain,
)
EOF
}

source $TENX_SCRIPTDIR/../tenkit/bin/common/_subcmd_mrp
