#!/usr/bin/env bash
#
# Copyright (c) 2017 10x Genomics, Inc. All rights reserved.
#
# Run SC_VDJ_ASSEMBLER_CS with mrp.
#

source $TENX_SCRIPTDIR/common/_includes

DOCOPT_SPEC="$(cat <<EOF
'$TENX_PRODUCT $TENX_SUBCMD' assembles single-cell V\(D\)J immune receptor
sequences.

$DOCOPT_PREAMBLE_FASTQS

Options:
# Single Cell
    $DOCOPT_OPTIONS_FASTQS
    $DOCOPT_OPTIONS_SAMPLE_INFO
    --reference=DIR     Path of folder containing 10x-compatible VDJ reference.
    --force-cells=NUM   Force pipeline to use this number of cells, bypassing
                            the cell detection algorithm. Optional.

# Martian Runtime
    $DOCOPT_OPTIONS_MRP_CLUSTER
EOF
)"

function implement_process_options {
    process_options_fastqs
    process_options_sample_info

    # --reference
    if [ -n "$reference" ]; then
        vdj_reference_path=\"$(abspath $reference)\"
    else
        vdj_reference_path=\"\"
    fi

    # NOTE: docopt automatically converts dashes to underscores (e.g. force-cells becomes force_cells)

    # --force_cells
    if [ -z "$force_cells" ]; then
        force_cells=null
    fi
}

function implement_generate_sample_defs {
    sample_def=""
    for fastq in $fastqs; do
        sample_def="$sample_def
        {
            \"fastq_mode\": $fastq_mode,
            \"gem_group\": null,
            \"lanes\": $lanes,
            \"read_path\": \"$fastq\",
            \"sample_indices\": $indices,
            \"sample_names\": $sample_names
        },"
    done
    sample_def=${sample_def%\,}
    sample_def=$(echo -e "[ $sample_def\n    ]")
}

function implement_generate_mro {
    cat <<EOF > $mro
@include "sc_vdj_assembler_cs.mro"

call SC_VDJ_ASSEMBLER_CS(
    sample_id = $sample_id,
    sample_def = $sample_def,
    sample_desc = $sample_desc,
    vdj_reference_path = $vdj_reference_path,
    force_cells = $force_cells,
)
EOF
}

source $TENX_SCRIPTDIR/../tenkit/bin/common/_subcmd_mrp
